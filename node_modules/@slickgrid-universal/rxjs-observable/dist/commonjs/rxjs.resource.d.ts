import { RxJsFacade } from '@slickgrid-universal/common';
import { Observable, Subject } from 'rxjs';
export declare class RxJsResource implements RxJsFacade {
    readonly className = "RxJsResource";
    /**
     * The same Observable instance returned by any call to without a scheduler.
     * This returns the EMPTY constant from RxJS
     */
    get EMPTY(): Observable<never>;
    /** Simple method to create an Observable */
    createObservable<T>(): Observable<T>;
    /** Simple method to create an Subject */
    createSubject<T>(): Subject<T>;
    firstValueFrom<T>(source: Observable<T>): Promise<T>;
    iif<T = never, F = never>(condition: () => boolean, trueResult?: any, falseResult?: any): Observable<T | F>;
    /** Tests to see if the object is an RxJS Observable */
    isObservable(obj: any): boolean;
    /** Emits the values emitted by the source Observable until a `notifier` Observable emits a value. */
    takeUntil<T>(notifier: Observable<any>): any;
}
