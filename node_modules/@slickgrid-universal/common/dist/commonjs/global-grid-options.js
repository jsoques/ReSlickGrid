"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalGridOptions = void 0;
const index_1 = require("./enums/index");
const filters_1 = require("./filters");
/** Global Grid Options Defaults */
exports.GlobalGridOptions = {
    alwaysShowVerticalScroll: true,
    autoEdit: false,
    asyncEditorLoading: false,
    autoFitColumnsOnFirstLoad: true,
    autoFixResizeTimeout: 5 * 60 * 5,
    autoFixResizeRequiredGoodCount: 2,
    autoFixResizeWhenBrokenStyleDetected: false,
    autoResize: {
        applyResizeToContainer: true,
        calculateAvailableSizeBy: 'window',
        bottomPadding: 20,
        minHeight: 180,
        minWidth: 300,
        rightPadding: 0
    },
    cellHighlightCssClass: 'slick-cell-modified',
    checkboxSelector: {
        cssClass: 'slick-cell-checkboxsel',
        width: 40
    },
    columnGroupSeparator: ' - ',
    columnPicker: {
        fadeSpeed: 0,
        hideForceFitButton: false,
        hideSyncResizeButton: true,
        headerColumnValueExtractor: pickerHeaderColumnValueExtractor
    },
    cellMenu: {
        autoAdjustDrop: true,
        autoAlignSide: true,
        hideCloseButton: true,
        hideCommandSection: false,
        hideOptionSection: false,
    },
    compositeEditorOptions: {
        labels: {
            cancelButtonKey: 'CANCEL',
            cloneButtonKey: 'CLONE',
            resetEditorButtonTooltipKey: 'RESET_INPUT_VALUE',
            resetFormButtonKey: 'RESET_FORM',
            massSelectionButtonKey: 'APPLY_TO_SELECTION',
            massSelectionStatusKey: 'X_OF_Y_MASS_SELECTED',
            massUpdateButtonKey: 'APPLY_MASS_UPDATE',
            massUpdateStatusKey: 'ALL_X_RECORDS_SELECTED',
            saveButtonKey: 'SAVE',
        },
    },
    contextMenu: {
        autoAdjustDrop: true,
        autoAlignSide: true,
        hideCloseButton: true,
        hideClearAllGrouping: false,
        hideCollapseAllGroups: false,
        hideCommandSection: false,
        hideCopyCellValueCommand: false,
        hideExpandAllGroups: false,
        hideExportCsvCommand: false,
        hideExportExcelCommand: false,
        hideExportTextDelimitedCommand: true,
        hideMenuOnScroll: true,
        hideOptionSection: false,
        iconCollapseAllGroupsCommand: 'fa fa-compress mdi mdi-arrow-collapse',
        iconExpandAllGroupsCommand: 'fa fa-expand mdi mdi-arrow-expand',
        iconClearGroupingCommand: 'fa fa-times mdi mdi-close',
        iconCopyCellValueCommand: 'fa fa-clone mdi mdi-content-copy',
        iconExportCsvCommand: 'fa fa-download mdi mdi-download',
        iconExportExcelCommand: 'fa fa-file-excel-o mdi mdi-file-excel-outline',
        iconExportTextDelimitedCommand: 'fa fa-download mdi mdi-download',
        width: 200,
    },
    customFooterOptions: {
        dateFormat: 'YYYY-MM-DD, hh:mm a',
        hideRowSelectionCount: false,
        hideTotalItemCount: false,
        hideLastUpdateTimestamp: true,
        footerHeight: 25,
        leftContainerClass: 'col-xs-12 col-sm-5',
        rightContainerClass: 'col-xs-6 col-sm-7',
        metricSeparator: '|',
        metricTexts: {
            items: 'items',
            itemsKey: 'ITEMS',
            of: 'of',
            ofKey: 'OF',
            itemsSelected: 'items selected',
            itemsSelectedKey: 'ITEMS_SELECTED'
        }
    },
    dataView: {
        syncGridSelection: true,
        syncGridSelectionWithBackendService: false, // but disable it when using backend services
    },
    datasetIdPropertyName: 'id',
    defaultFilter: filters_1.Filters.input,
    defaultBackendServiceFilterTypingDebounce: 500,
    enableFilterTrimWhiteSpace: false,
    defaultFilterPlaceholder: '🔎︎',
    defaultFilterRangeOperator: index_1.OperatorType.rangeInclusive,
    defaultColumnSortFieldId: 'id',
    defaultComponentEventPrefix: '',
    defaultSlickgridEventPrefix: '',
    editable: false,
    editorTypingDebounce: 450,
    filterTypingDebounce: 0,
    enableEmptyDataWarningMessage: true,
    emptyDataWarning: {
        className: 'slick-empty-data-warning',
        message: 'No data to display.',
        messageKey: 'EMPTY_DATA_WARNING_MESSAGE',
        hideFrozenLeftWarning: false,
        hideFrozenRightWarning: false,
        leftViewportMarginLeft: '40%',
        rightViewportMarginLeft: '40%',
        frozenLeftViewportMarginLeft: '0px',
        frozenRightViewportMarginLeft: '40%',
    },
    enableAutoResize: true,
    enableAutoSizeColumns: true,
    enableCellNavigation: false,
    enableColumnPicker: true,
    enableColumnReorder: true,
    enableColumnResizeOnDoubleClick: true,
    enableContextMenu: true,
    enableExcelExport: false,
    enableTextExport: false,
    enableGridMenu: true,
    enableHeaderMenu: true,
    enableMouseHoverHighlightRow: true,
    enableSorting: true,
    enableTextSelectionOnCells: true,
    explicitInitialization: true,
    excelExportOptions: {
        addGroupIndentation: true,
        exportWithFormatter: false,
        filename: 'export',
        format: index_1.FileType.xlsx,
        groupingColumnHeaderTitle: 'Group By',
        groupCollapsedSymbol: '⮞',
        groupExpandedSymbol: '⮟',
        groupingAggregatorRowText: '',
        sanitizeDataExport: false,
    },
    textExportOptions: {
        delimiter: index_1.DelimiterType.comma,
        exportWithFormatter: false,
        filename: 'export',
        format: index_1.FileType.csv,
        groupingColumnHeaderTitle: 'Group By',
        groupingAggregatorRowText: '',
        sanitizeDataExport: false,
        useUtf8WithBom: true
    },
    gridAutosizeColsMode: index_1.GridAutosizeColsMode.none,
    eventNamingStyle: index_1.EventNamingStyle.lowerCase,
    forceFitColumns: false,
    frozenHeaderWidthCalcDifferential: 1,
    gridMenu: {
        commandLabels: {
            clearAllFiltersCommandKey: 'CLEAR_ALL_FILTERS',
            clearAllSortingCommandKey: 'CLEAR_ALL_SORTING',
            clearFrozenColumnsCommandKey: 'CLEAR_PINNING',
            exportCsvCommandKey: 'EXPORT_TO_CSV',
            exportExcelCommandKey: 'EXPORT_TO_EXCEL',
            exportTextDelimitedCommandKey: 'EXPORT_TO_TAB_DELIMITED',
            refreshDatasetCommandKey: 'REFRESH_DATASET',
            toggleFilterCommandKey: 'TOGGLE_FILTER_ROW',
            togglePreHeaderCommandKey: 'TOGGLE_PRE_HEADER_ROW',
        },
        hideClearAllFiltersCommand: false,
        hideClearAllSortingCommand: false,
        hideClearFrozenColumnsCommand: true,
        hideExportCsvCommand: false,
        hideExportExcelCommand: false,
        hideExportTextDelimitedCommand: true,
        hideForceFitButton: false,
        hideRefreshDatasetCommand: false,
        hideSyncResizeButton: true,
        hideToggleFilterCommand: false,
        hideTogglePreHeaderCommand: false,
        iconCssClass: 'fa fa-bars mdi mdi-menu',
        iconClearAllFiltersCommand: 'fa fa-filter mdi mdi-filter-remove-outline',
        iconClearAllSortingCommand: 'fa fa-unsorted mdi mdi-swap-vertical',
        iconClearFrozenColumnsCommand: 'fa fa-times mdi mdi-pin-off-outline',
        iconExportCsvCommand: 'fa fa-download mdi mdi-download',
        iconExportExcelCommand: 'fa fa-file-excel-o mdi mdi-file-excel-outline',
        iconExportTextDelimitedCommand: 'fa fa-download mdi mdi-download',
        iconRefreshDatasetCommand: 'fa fa-refresh mdi mdi-sync',
        iconToggleFilterCommand: 'fa fa-random mdi mdi-flip-vertical',
        iconTogglePreHeaderCommand: 'fa fa-random mdi mdi-flip-vertical',
        menuWidth: 16,
        resizeOnShowHeaderRow: true,
        useClickToRepositionMenu: false,
        headerColumnValueExtractor: pickerHeaderColumnValueExtractor
    },
    headerMenu: {
        autoAlign: true,
        autoAlignOffset: 12,
        minWidth: 140,
        iconClearFilterCommand: 'fa fa-filter mdi mdi mdi-filter-remove-outline',
        iconClearSortCommand: 'fa fa-unsorted mdi mdi-swap-vertical',
        iconFreezeColumns: 'fa fa-thumb-tack mdi mdi-pin-outline',
        iconSortAscCommand: 'fa fa-sort-amount-asc mdi mdi-flip-v mdi-sort-ascending',
        iconSortDescCommand: 'fa fa-sort-amount-desc mdi mdi-flip-v mdi-sort-descending',
        iconColumnHideCommand: 'fa fa-times mdi mdi-close',
        iconColumnResizeByContentCommand: 'fa fa-arrows-h mdi mdi-arrow-expand-horizontal',
        hideColumnResizeByContentCommand: false,
        hideColumnHideCommand: false,
        hideClearFilterCommand: false,
        hideClearSortCommand: false,
        hideFreezeColumnsCommand: true,
        hideSortCommands: false
    },
    multiColumnSort: true,
    numberedMultiColumnSort: true,
    tristateMultiColumnSort: false,
    sortColNumberInSeparateSpan: true,
    suppressActiveCellChangeOnEdit: true,
    pagination: {
        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],
        pageSize: 25,
        totalItems: 0
    },
    //   // technically speaking the Row Detail requires the process & viewComponent but we'll ignore it just to set certain options
    //   rowDetailView: {
    //     cssClass: 'detail-view-toggle',
    //     panelRows: 1,
    //     keyPrefix: '__',
    //     useRowClick: false,
    //     useSimpleViewportCalc: true,
    //     saveDetailViewOnScroll: false,
    //   },
    headerRowHeight: 35,
    rowHeight: 35,
    topPanelHeight: 30,
    translationNamespaceSeparator: ':',
    resizeByContentOnlyOnFirstLoad: true,
    resizeByContentOptions: {
        alwaysRecalculateColumnWidth: false,
        cellCharWidthInPx: 7.8,
        cellPaddingWidthInPx: 14,
        defaultRatioForStringType: 0.88,
        formatterPaddingWidthInPx: 0,
        maxItemToInspectCellContentWidth: 1000,
        maxItemToInspectSingleColumnWidthByContent: 5000,
        widthToRemoveFromExceededWidthReadjustment: 50,
    },
    treeDataOptions: {
        exportIndentMarginLeft: 5,
        exportIndentationLeadingChar: '͏͏͏͏͏͏͏͏͏·',
    }
};
/**
 * Value Extractor for both ColumnPicker & GridMenu Picker
 * when using Column Header Grouping, we'll prefix the column group title
 * else we'll simply return the column name title
 */
function pickerHeaderColumnValueExtractor(column, gridOptions) {
    var _a, _b;
    const headerGroup = (column === null || column === void 0 ? void 0 : column.columnGroup) || '';
    const columnGroupSeparator = (_a = gridOptions === null || gridOptions === void 0 ? void 0 : gridOptions.columnGroupSeparator) !== null && _a !== void 0 ? _a : ' - ';
    if (headerGroup) {
        return headerGroup + columnGroupSeparator + column.name;
    }
    return (_b = column === null || column === void 0 ? void 0 : column.name) !== null && _b !== void 0 ? _b : '';
}
//# sourceMappingURL=global-grid-options.js.map