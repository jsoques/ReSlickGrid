import 'jquery-ui/ui/widgets/slider';
import { OperatorType, OperatorString, SearchTerm } from '../enums/index';
import { Column, ColumnFilter, Filter, FilterArguments, FilterCallback, GridOption, JQueryUiSliderOption, JQueryUiSliderResponse, SlickGrid } from '../interfaces/index';
/** A Slider Range Filter which uses jQuery UI, this is only meant to be used as a range filter (with 2 handles lowest & highest values) */
export declare class SliderRangeFilter implements Filter {
    protected _clearFilterTriggered: boolean;
    protected _currentValues?: number[];
    protected _shouldTriggerQuery: boolean;
    protected _sliderOptions: JQueryUiSliderOption;
    protected $filterElm: any;
    protected $filterContainerElm: any;
    grid: SlickGrid;
    searchTerms: SearchTerm[];
    columnDef: Column;
    callback: FilterCallback;
    /** Getter for the Filter Generic Params */
    protected get filterParams(): any;
    /** Getter for the `filter` properties */
    protected get filterProperties(): ColumnFilter;
    /** Getter for the Column Filter */
    get columnFilter(): ColumnFilter;
    /** Getter for the Current Slider Values */
    get currentValues(): number[] | undefined;
    /** Getter to know what would be the default operator when none is specified */
    get defaultOperator(): OperatorType | OperatorString;
    /** Getter for the Grid Options pulled through the Grid Object */
    get gridOptions(): GridOption;
    /** Getter for the JQuery UI Slider Options */
    get sliderOptions(): JQueryUiSliderOption;
    /** Getter of the Operator to use when doing the filter comparing */
    get operator(): OperatorType | OperatorString;
    /** Setter for the filter operator */
    set operator(operator: OperatorType | OperatorString);
    /**
     * Initialize the Filter
     */
    init(args: FilterArguments): void;
    /**
     * Clear the filter value
     */
    clear(shouldTriggerQuery?: boolean): void;
    /**
     * destroy the filter
     */
    destroy(): void;
    /**
     * Render both slider values (low/high) on screen
     * @param lowestValue number
     * @param highestValue number
     */
    renderSliderValues(lowestValue: number | string, highestValue: number | string): void;
    /**
     * Set value(s) on the DOM element
     * @params searchTerms
     */
    setValues(searchTerms: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString): void;
    /**
     * From the html template string, create a DOM element
     * @param searchTerm optional preset search terms
     */
    protected createDomElement(searchTerms?: SearchTerm | SearchTerm[]): any;
    /** On a value change event triggered */
    protected onValueChanged(e: Event, ui: JQueryUiSliderResponse): void;
}
