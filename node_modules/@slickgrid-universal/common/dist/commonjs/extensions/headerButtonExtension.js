"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderButtonExtension = void 0;
require("slickgrid/plugins/slick.headerbuttons");
class HeaderButtonExtension {
    constructor(extensionUtility, sharedService) {
        this.extensionUtility = extensionUtility;
        this.sharedService = sharedService;
        this._addon = null;
        this._headerButtonOptions = null;
        this._eventHandler = new Slick.EventHandler();
    }
    get eventHandler() {
        return this._eventHandler;
    }
    dispose() {
        // unsubscribe all SlickGrid events
        this._eventHandler.unsubscribeAll();
        if (this._addon && this._addon.destroy) {
            this._addon.destroy();
        }
        this.extensionUtility.nullifyFunctionNameStartingWithOn(this._headerButtonOptions);
        this._addon = null;
        this._headerButtonOptions = null;
    }
    /** Get the instance of the SlickGrid addon (control or plugin). */
    getAddonInstance() {
        return this._addon;
    }
    /** Register the 3rd party addon (plugin) */
    register() {
        if (this.sharedService && this.sharedService.slickGrid && this.sharedService.gridOptions) {
            this._headerButtonOptions = this.sharedService.gridOptions.headerButton || {};
            this._addon = new Slick.Plugins.HeaderButtons(this._headerButtonOptions);
            if (this._addon) {
                this.sharedService.slickGrid.registerPlugin(this._addon);
            }
            // hook all events
            if (this._addon && this.sharedService.slickGrid && this._headerButtonOptions) {
                if (this._headerButtonOptions.onExtensionRegistered) {
                    this._headerButtonOptions.onExtensionRegistered(this._addon);
                }
                const onCommandHandler = this._addon.onCommand;
                if (onCommandHandler) {
                    this._eventHandler.subscribe(onCommandHandler, (e, args) => {
                        if (this._headerButtonOptions && typeof this._headerButtonOptions.onCommand === 'function') {
                            this._headerButtonOptions.onCommand(e, args);
                        }
                    });
                }
            }
            return this._addon;
        }
        return null;
    }
}
exports.HeaderButtonExtension = HeaderButtonExtension;
//# sourceMappingURL=headerButtonExtension.js.map