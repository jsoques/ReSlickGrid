import 'slickgrid/plugins/slick.contextmenu';
import { Extension, SlickContextMenu, SlickEventHandler } from '../interfaces/index';
import { ExtensionUtility } from './extensionUtility';
import { SharedService } from '../services/shared.service';
import { TranslaterService, TreeDataService } from '../services/index';
export declare class ContextMenuExtension implements Extension {
    private readonly extensionUtility;
    private readonly sharedService;
    private readonly treeDataService;
    private readonly translaterService?;
    private _addon;
    private _contextMenuOptions;
    private _eventHandler;
    private _userOriginalContextMenu;
    constructor(extensionUtility: ExtensionUtility, sharedService: SharedService, treeDataService: TreeDataService, translaterService?: TranslaterService | undefined);
    get eventHandler(): SlickEventHandler;
    dispose(): void;
    /** Get the instance of the SlickGrid addon (control or plugin). */
    getAddonInstance(): SlickContextMenu | null;
    /** Register the 3rd party addon (plugin) */
    register(): SlickContextMenu | null;
    /** Translate the Context Menu titles, we need to loop through all column definition to re-translate them */
    translateContextMenu(): void;
    /** Create Context Menu with Custom Commands (copy cell value, export) */
    private addMenuCustomCommands;
    /**
     * First get the value, if "exportWithFormatter" is set then we'll use the formatter output
     * Then we create the DOM trick to copy a text value by creating a fake <div> that is not shown to the user
     * and from there we can call the execCommand 'copy' command and expect the value to be in clipboard
     * @param args
     */
    private copyToClipboard;
    /**
     * When a queryFieldNameGetterFn is defined, then get the value from that getter callback function
     * @param columnDef
     * @param dataContext
     * @return cellValue
     */
    private getCellValueFromQueryFieldGetter;
}
